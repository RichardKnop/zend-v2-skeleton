<?xml version="1.0" encoding="UTF-8"?>

<project name="zend-v2-skeleton" default="build">
	<target name="build"
			depends="composer,migrate,prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,behat,phpunit-ci"/>

	<target name="build-parallel"
			depends="composer,migrate,prepare,lint,tools-parallel,behat,phpunit-ci"/>

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="3">
			<sequential>
				<antcall target="pdepend"/>
				<antcall target="phpmd-ci"/>
			</sequential>
			<antcall target="phpcpd"/>
			<antcall target="phpcs-ci"/>
			<antcall target="phploc"/>
		</parallel>
	</target>

	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${basedir}/build/api"/>
		<delete dir="${basedir}/build/code-browser"/>
		<delete dir="${basedir}/build/coverage"/>
		<delete dir="${basedir}/build/logs"/>
		<delete dir="${basedir}/build/pdepend"/>
		<delete dir="${basedir}/generatedJUnitFiles"/>
	</target>

	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${basedir}/build/api"/>
		<mkdir dir="${basedir}/build/code-browser"/>
		<mkdir dir="${basedir}/build/coverage"/>
		<mkdir dir="${basedir}/build/logs"/>
		<mkdir dir="${basedir}/build/pdepend"/>
		<touch file="${basedir}/build/logs/pmd.xml"/>
	</target>

	<target name="migrate" description="Migrate the database">
		<exec executable="${basedir}/vendor/bin/doctrine-module" failonerror="true">
			<env key="APPLICATION_ENV" value="test"/>
			<arg line="migrations:migrate --no-interaction"/>
		</exec>
		<exec executable="${basedir}/vendor/bin/doctrine-module" failonerror="true">
			<arg line="migrations:migrate --no-interaction"/>
		</exec>
	</target>
	<target name="migrate-down" description="Migrate the database down">
		<exec executable="${basedir}/vendor/bin/doctrine-module" failonerror="true">
			<env key="APPLICATION_ENV" value="test"/>
			<arg line="migrations:migrate 0 --no-interaction"/>
		</exec>
		<exec executable="${basedir}/vendor/bin/doctrine-module" failonerror="true">
			<arg line="migrations:migrate 0 --no-interaction"/>
		</exec>
	</target>

	<target name="lint" description="Perform syntax check of sourcecode files">
		<apply executable="php" failonerror="true">
			<arg value="-l" />
			<fileset dir="${basedir}/module">
				<include name="**/*.php" />
				<modified />
			</fileset>
		</apply>
	</target>

	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg value="--log-csv" />
			<arg value="${basedir}/build/logs/phploc.csv" />
			<arg path="${basedir}" />
		</exec>
	</target>

	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg path="${basedir}/module,${basedir}/schema" />
		</exec>
	</target>

	<target name="phpmd"
			description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="${basedir}/vendor/bin/phpmd" failonerror="true">
			<arg line="${basedir}/ text ${basedir}/phpmd.xml --exclude *vendor/*,*public/*,*tools/*,*schema/*,*tests/scripts/*,*data/*,*features/*" />
		</exec>
	</target>

	<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
		<exec executable="${basedir}/vendor/bin/phpmd" failonerror="true">
			<arg line="${basedir}/ xml ${basedir}/phpmd.xml --reportfile ${basedir}/build/logs/pmd.xml --exclude *vendor/*,*public/*,*tools/*,*schema/*,*tests/scripts/*,*data/*,*features/*" />
		</exec>
	</target>

	<target name="phpcs"
			description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="${basedir}/vendor/bin/phpcs" failonerror="true">
			<arg path="${basedir}" />
			<arg value="--standard=${basedir}/tools/Standards/Saffron" />
			<arg value="--extensions=php" />
			<arg value="--ignore=*data/*,*vendor/*,*public/*,*tools/*,*schema/*,*tests/scripts/*,init_autoloader.php,autoload_classmap" />
		</exec>
	</target>

	<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
		<exec executable="${basedir}/vendor/bin/phpcs" output="/dev/null"  failonerror="true">
			<arg path="${basedir}" />
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
			<arg value="--standard=${basedir}/tools/Standards/Saffron" />
			<arg value="--extensions=php" />
			<arg value="--ignore=*data/*,*vendor/*,*public/*,*tools/*,*schema/*,*tests/scripts/*,init_autoloader.php,autoload_classmap" />
		</exec>
	</target>

	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg line="--exclude vendor/ --exclude public/ --exclude tools/ --exclude schema/ --exclude tests/scripts/ --exclude data/ --log-pmd ${basedir}/build/logs/pmd-cpd.xml ${basedir}" />
		</exec>
	</target>

	<target name="phpunit" description="Run unit tests with PHPUnit">
		<exec executable="${basedir}/vendor/bin/phpunit" failonerror="true">
			<arg value="--configuration" />
			<arg path="${basedir}/tests/phpunit.xml" />
		</exec>
	</target>
	<target name="phpunit-ci" description="Run unit tests with PHPUnit">
		<exec executable="${basedir}/vendor/bin/phpunit" failonerror="true">
			<arg value="--configuration" />
			<arg path="${basedir}/tests/phpunit-ci.xml" />
		</exec>
	</target>
	<target name="composer" description="">
		<exec executable="php">
			<arg value="composer.phar" />
			<arg value="install" />
			<arg value="--dev" />
		</exec>
	</target>
	<target name="classmapgenerator" description="">
		<exec executable="php">
			<arg value="${basedir}/vendor/zendframework/zendframework/bin/classmap_generator.php" />
			<arg value="-w" />
			<arg value="-l" />
			<arg value="module/Admin" />
		</exec>
		<exec executable="php">
			<arg value="${basedir}/vendor/zendframework/zendframework/bin/classmap_generator.php" />
			<arg value="-w" />
			<arg value="-l" />
			<arg value="module/Api" />
		</exec>
	</target>

	<target name="behat">
		<delete dir="${basedir}/build/behat" />
		<mkdir dir="${basedir}/build/behat"/>
		<exec dir="${basedir}/tests/functional" executable="${basedir}/vendor/bin/behat" failonerror="true">
			<arg line="-c ${basedir}/vendor/behat.yml"/>
			<arg line="-f junit --out ${basedir}/build/behat"/>
		</exec>
		<junitreport todir="./build">
			<fileset dir="${basedir}/build/behat">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="./build/html"/>
		</junitreport>
	</target>

</project>